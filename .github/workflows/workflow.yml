name: Infrastructure Deployment


on:
  workflow_dispatch:
  push:
    branches:
     - master

permissions:
  id-token: write
  contents: read


jobs:

  #----------------------------------------------
  #-------Setup Infrastructure-------------------
  #----------------------------------------------

  setup_cloudfront_s3_cdn_infrastructure:
    runs-on: ubuntu-latest


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      #----------------------------------------------
      # ----- Authenticate With AWS Credentials -----
      #----------------------------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      #----------------------------------------------
      # --- Setup Terraform with specific version ---
      #----------------------------------------------
      - name: Setup Terraform
        run: |
          # change directory to /tmp to avoid conflicts with terraform folder containing the infrastruture code
          cd /tmp
          sudo apt install wget curl unzip
          TER_VER=`curl -s https://api.github.com/repos/hashicorp/terraform/releases/latest | grep tag_name | cut -d: -f2 | tr -d \"\,\v | awk '{$1=$1};1'`
          wget https://releases.hashicorp.com/terraform/${TER_VER}/terraform_${TER_VER}_linux_amd64.zip
          unzip terraform_${TER_VER}_linux_amd64.zip
          sudo mv -f terraform /bin/terraform
        # uses: hashicorp/setup-terraform@v2
        # with:
        #   terraform_version: 1.3.7
        #   terraform_wrapper: false

      - name: View versions of tools
        run: |
          echo "Terraform version: $(terraform version)"

    #----------------------------------------------
    #----  Setup Infrastructure   -----------------
    #----------------------------------------------

      - name: Terraform init
        run: |
          cd terraform
          terraform init -backend-config=backend.hcl
      - name: Terraform validate
        run: |
          cd terraform
          terraform validate
      - name: Terraform plan
        run: |
          cd terraform
          terraform plan
      - name: Terraform apply
        run: |
          cd terraform
          terraform apply -auto-approve
      - name: Get Bucket Name
        id: static-bucket
        run: |
          cd terraform
          # Get the S3 Bucket Name from terraform output with -raw flag
          export S3_BUCKET_NAME=$(terraform output -raw s3_bucket_name) 
          echo "S3 Bucket Name: $S3_BUCKET_NAME"
          # echo "S3_BUCKET_NAME=$(terraform output s3_bucket_name | tr -d '"')" >> $GITHUB_OUTPUT
          # Clean the output by removing any unwanted characters
          # S3_BUCKET_NAME=$(echo "$S3_BUCKET_NAME" | sed 's/[^A-Za-z0-9_-]//g')
          # Export the bucket name variable to the environment for later use
          # echo "S3_BUCKET_NAME=$(terraform output s3_bucket_name | tr -d '"')" >> $GITHUB_ENV


    #------------------------------------------------------------------
    # ---------- Install Packages and Build Artifact ------------------
    #------------------------------------------------------------------

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 14

      - name: Install Packages and Build Artifact
        run: |
          cd app
          npm install
          npm run build

    #------------------------------------------------------------------
    # ----- Upload Artifact to S3 Bucket for specific environment -----
    #------------------------------------------------------------------
      - name: Upload Artifact to S3 Bucket
        run: |
          cd terraform
          export S3_BUCKET_NAME=$(terraform output s3_bucket_name | tr -d '"')
          echo "S3 Bucket Name: $S3_BUCKET_NAME"
          # Change to home directory
          cd $GITHUB_WORKSPACE
          # Sync the build directory to the S3 bucket 
          aws s3 sync app/build/ s3://$S3_BUCKET_NAME --delete
          # aws s3 sync . s3://${{ steps.static-bucket.outputs.S3_BUCKET_NAME }} --delete
  
    #--------------------------------------------------------------------------------------
    #- Invalidate Cloudfront Distribution to ensure new changes are reflected in browser --
    #--------------------------------------------------------------------------------------
  invalidate_cloudfront_s3_cdn:
    runs-on: ubuntu-latest
    needs: [setup_cloudfront_s3_cdn_infrastructure]


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3


      #----------------------------------------------
      # ----- Authenticate With AWS Credentials -----
      #----------------------------------------------
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform init
        run: |
          cd terraform
          terraform init -backend-config=backend.hcl

      - name: Deploy Cloudfront S3 CDN
        id:  cloudfront-invalidate
        run: |
          cd terraform
          export CLOUDFRONT_DISTRIBUTION_ID=$(terraform output cloudfront_distribution_id | tr -d '"')
          echo "CLOUDFRONT_DISTRIBUTION_ID: $CLOUDFRONT_DISTRIBUTION_ID"

           # Number of attempts to invalidate Cloudfront distribution increased to 15
           # https://stackoverflow.com/questions/72287326/aws-cloudfront-error-invalidation-max-times-while-deploying
           AWS_MAX_ATTEMPTS=15 aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --region us-east-1 --paths "/*"
